/**
 * Copyright (C) 2013
 *   Michael Mosmann <michael@mosmann.de>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * This class has been generated by Fast Code Eclipse Plugin 
 * For more information please go to http://fast-code.sourceforge.net/
 * @author : mosmann
 * Created : 06/22/2014 07:28:43
 */
package de.flapdoodle.soapy.config;

import java.util.List;

import com.google.common.collect.ImmutableList;
import com.google.common.collect.Lists;

public class TypeBuilder {
    private Name<Type> name;
    private final List<Name<Type>> baseTypes=Lists.newArrayList();
    private final List<Property> properties=Lists.newArrayList();

    public TypeBuilder name(String name) {
        this.name = Name.of(Type.class,name);
        return this;
    }

    public TypeBuilder baseType(Name<Type> baseType) {
        this.baseTypes.add(baseType);
        return this;
    }

    public TypeBuilder property(Property property) {
        this.properties.add(property);
        return this;
    }

    public Type build() {
        return new Type(name, ImmutableList.copyOf(baseTypes), ImmutableList.copyOf(properties));
    }
}